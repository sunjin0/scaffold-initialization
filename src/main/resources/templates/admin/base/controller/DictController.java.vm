package com.sun.project.controller.sys;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.sun.project.api.permission.Permission;
import com.sun.project.common.dict.service.dictService;
import com.sun.project.common.entity.common.Option;
import com.sun.project.common.entity.common.WebResponse;
import com.sun.project.common.entity.sys.SysDict;
import com.sun.project.common.i18n.I18nUtils;
import com.sun.project.common.valid.ValidEntity;
import com.sun.project.common.vo.sys.SysDictVo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Nullable;
import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.stream.Collectors;

@Api(value = "系统字典服务 API")
@Validated
@RestController
@Permission(path = "/sys/dict")
@RequestMapping("/api/sys/dict")
public class SysDictController {
    private final DictService dictService;

    public SysDictController(DictService dictService) {
        this.dictService = dictService;
    }

    @ApiOperation(value = "获取字典列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @PostMapping("/list")
    public WebResponse<List<SysDictVo>> list(@RequestBody SysDictVo dict) {
        Page<SysDictVo> list = dictService.list(dict);
        return WebResponse.Page(list.getRecords(), list.getTotal());
    }

    @ApiOperation("获取字典")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", required = true),
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @GetMapping("/info")
    public WebResponse<SysDict> info(@RequestParam @NotNull String id) {
        return WebResponse.OK(dictService.info(id));
    }

    @ApiOperation("删除字典")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", required = true),
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @Permission(path = "/sys/dict", type = Permission.Type.Write)
    @GetMapping("/delete")
    public WebResponse<Boolean> delete(@RequestParam @NotNull String id) {
        boolean delete = dictService.delete(id);
        return WebResponse.OK(delete ? I18nUtils.getMessage("delete.success") : I18nUtils.getMessage("delete.fail"), delete);
    }

    @ApiOperation("添加字典")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @Permission(path = "/sys/dict", type = Permission.Type.Write)
    @PostMapping("/add")
    public WebResponse<Boolean> save(@RequestBody
                                     @ValidEntity(fieldNames = {"code", "name", "nameCn"})
                                     SysDict dict) {
        boolean save = dictService.saveOrUpdate(dict);
        if (dict.getId() != null) {
            return WebResponse.OK(I18nUtils.getMessage(save ? "update.success" : "update.fail"), save);
        } else {
            return WebResponse.OK(I18nUtils.getMessage(save ? "add.success" : "add.fail"), save);
        }
    }

    @ApiOperation("获取字典选项")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "parentCode", required = true),
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @GetMapping("/select")
    public WebResponse<List<Option>> getOptions() {
        List<SysDict> list = dictService.select();
        String lng = I18nUtils.getMessage("lng");
        List<Option> options = list.stream().map(item -> new Option("en_US".equals(lng) ? item.getName() : item.getNameCn(), item.getCode())).collect(Collectors.toList());
        return WebResponse.OK(options);
    }

    @ApiOperation("根据code获取字典,可指定语言")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "code", required = true),
            @ApiImplicitParam(name = "lang"),
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @Permission(required = false)
    @GetMapping("/code")
    public WebResponse<SysDict> getByCode(@RequestParam @NotNull String code, @RequestParam @Nullable String lang) {
        return WebResponse.OK(dictService.getByCode(code, lang));
    }

    @ApiOperation("根据父code获取字典,可指定语言")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "parentCode", required = true),
            @ApiImplicitParam(name = "lang"),
            @ApiImplicitParam(name = "Authorization", value = "访问令牌", required = true, dataType = "string", paramType = "header")
    })
    @Permission(required = false)
    @GetMapping("/options")
    public WebResponse<List<Option>> getByParentCode(@RequestParam @NotNull String parentCode) {
        return WebResponse.OK(dictService.getOptions(parentCode));
    }
}
